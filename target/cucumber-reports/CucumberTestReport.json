[{"line":1,"elements":[{"start_timestamp":"2025-05-08T17:01:41.876Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":3653021100,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":3,"name":"Successful login with valid credentials","description":"","id":"login-functionality;successful-login-with-valid-credentials","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":2080064400,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":997000,"status":"skipped"},"line":4,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":5,"name":"user enters username \"standard_user\" and password \"secret_sauce\"","match":{"arguments":[{"val":"\"standard_user\"","offset":21},{"val":"\"secret_sauce\"","offset":50}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":6,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"duration":998100,"status":"skipped"},"line":7,"name":"user should be navigated to home page","match":{"location":"com.example.stepdefinitions.LoginSteps.userShouldBeNavigatedToHomePage()"},"keyword":"Then "},{"result":{"status":"skipped"},"line":8,"name":"welcome message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.welcomeMessageShouldBeDisplayed()"},"keyword":"And "}]},{"start_timestamp":"2025-05-08T17:01:47.667Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":2902665300,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":18,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;2","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":2927341300,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"user enters username \"invalid\" and password \"password123\"","match":{"arguments":[{"val":"\"invalid\"","offset":21},{"val":"\"password123\"","offset":44}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"duration":997100,"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:01:53.528Z","before":[{"result":{"duration":10595818000,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":19,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;3","after":[{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":551161800,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1386377300,"status":"passed"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"duration":20247585700,"status":"passed"},"line":12,"name":"user enters username \"testuser\" and password \"wrong\"","match":{"arguments":[{"val":"\"testuser\"","offset":21},{"val":"\"wrong\"","offset":45}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":100137400,"status":"passed"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: Error message is not displayed\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed(LoginSteps.java:53)\r\n\tat ✽.error message should be displayed(file:///C:/selenium-demo/selenium-cucumber/src/test/resources/features/login.feature:14)\r\n","duration":10075010500,"status":"failed"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:02:36.493Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":3368766800,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":20,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;4","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":1891689700,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"duration":997100,"status":"skipped"},"line":12,"name":"user enters username \"\" and password \"password123\"","match":{"arguments":[{"val":"\"\"","offset":21},{"val":"\"password123\"","offset":37}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:02:41.767Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":2285378700,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":21,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;5","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":3362257200,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"user enters username \"testuser\" and password \"\"","match":{"arguments":[{"val":"\"testuser\"","offset":21},{"val":"\"\"","offset":45}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]}],"name":"Login Functionality","description":"","id":"login-functionality","keyword":"Feature","uri":"file:src/test/resources/features/login.feature","tags":[]}]","mime_type":"image/png","name":"screenshot"}],"result":{"duration":424130400,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":453959000,"status":"passed"},"line":4,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"duration":20232853600,"status":"passed"},"line":5,"name":"user enters username \"standard_user\" and password \"secret_sauce\"","match":{"arguments":[{"val":"\"standard_user\"","offset":21},{"val":"\"secret_sauce\"","offset":50}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":112936600,"status":"passed"},"line":6,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: User is not navigated to home page\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat com.example.stepdefinitions.LoginSteps.userShouldBeNavigatedToHomePage(LoginSteps.java:41)\r\n\tat ✽.user should be navigated to home page(file:///C:/selenium-demo/selenium-cucumber/src/test/resources/features/login.feature:7)\r\n","duration":10065877600,"status":"failed"},"line":7,"name":"user should be navigated to home page","match":{"location":"com.example.stepdefinitions.LoginSteps.userShouldBeNavigatedToHomePage()"},"keyword":"Then "},{"result":{"status":"skipped"},"line":8,"name":"welcome message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.welcomeMessageShouldBeDisplayed()"},"keyword":"And "}]},{"start_timestamp":"2025-05-08T17:01:20.294Z","before":[{"result":{"duration":1867417700,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":18,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;2","after":[{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":964782700,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":395056700,"status":"passed"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"duration":20473764500,"status":"passed"},"line":12,"name":"user enters username \"invalid\" and password \"password123\"","match":{"arguments":[{"val":"\"invalid\"","offset":21},{"val":"\"password123\"","offset":44}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":193355100,"status":"passed"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: Error message is not displayed\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed(LoginSteps.java:53)\r\n\tat ✽.error message should be displayed(file:///C:/selenium-demo/selenium-cucumber/src/test/resources/features/login.feature:14)\r\n","duration":10068596700,"status":"failed"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:01:54.271Z","before":[{"result":{"duration":4960099500,"status":"passed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":19,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;3","after":[{"result":{"error_message":"org.openqa.selenium.NoSuchSessionException: invalid session id\nBuild info: version: '4.10.0', revision: 'c14d967899'\nSystem info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [75104b41d4420e0e28e400a898014cf3, screenshot {}]\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.85, chrome: {chromedriverVersion: 135.0.7049.114 (63fd8a7d9d0..., userDataDir: C:\\Users\\JaneRose\\AppData\\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59675}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59675/devtoo..., se:cdpVersion: 135.0.7049.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 75104b41d4420e0e28e400a898014cf3\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:590)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:594)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:316)\r\n\tat com.example.stepdefinitions.Hooks.tearDown(Hooks.java:28)\r\n","duration":129410200,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1107761300,"status":"passed"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"error_message":"org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=135.0.7049.85)\nBuild info: version: '4.10.0', revision: 'c14d967899'\nSystem info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [75104b41d4420e0e28e400a898014cf3, findElement {using=id, value=user-name}]\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.85, chrome: {chromedriverVersion: 135.0.7049.114 (63fd8a7d9d0..., userDataDir: C:\\Users\\JaneRose\\AppData\\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59675}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59675/devtoo..., se:cdpVersion: 135.0.7049.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 75104b41d4420e0e28e400a898014cf3\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)\r\n\tat org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)\r\n\tat org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)\r\n\tat com.example.pages.BasePage.waitForElementToBeVisible(BasePage.java:27)\r\n\tat com.example.pages.BasePage.enterText(BasePage.java:35)\r\n\tat com.example.pages.LoginPage.enterUsername(LoginPage.java:22)\r\n\tat com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(LoginSteps.java:30)\r\n\tat ✽.user enters username \"testuser\" and password \"wrong\"(file:///C:/selenium-demo/selenium-cucumber/src/test/resources/features/login.feature:12)\r\n","duration":20014091800,"status":"failed"},"line":12,"name":"user enters username \"testuser\" and password \"wrong\"","match":{"arguments":[{"val":"\"testuser\"","offset":21},{"val":"\"wrong\"","offset":45}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:02:20.491Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":1470603100,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":20,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;4","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":1543793700,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"user enters username \"\" and password \"password123\"","match":{"arguments":[{"val":"\"\"","offset":21},{"val":"\"password123\"","offset":37}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-08T17:02:23.518Z","before":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:78)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":1568948700,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.setUp()"}}],"line":21,"name":"Unsuccessful login with invalid credentials","description":"","id":"login-functionality;unsuccessful-login-with-invalid-credentials;;5","after":[{"result":{"error_message":"io.github.bonigarcia.wdm.config.WebDriverManagerException: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1414)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.fallback(WebDriverManager.java:1430)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:1408)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1189)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:426)\r\n\tat com.example.managers.DriverManager.createDriver(DriverManager.java:43)\r\n\tat com.example.managers.DriverManager.getDriver(DriverManager.java:21)\r\n\tat com.example.context.TestContext.<init>(TestContext.java:15)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)\r\n\tat org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)\r\n\tat org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)\r\n\tat org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)\r\n\tat org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:54)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64)\r\n\tat io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46)\r\n\tat io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:90)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\r\nCaused by: io.github.bonigarcia.wdm.config.WebDriverManagerException: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:335)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.downloadAndExtract(Downloader.java:152)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.download(Downloader.java:92)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.download(WebDriverManager.java:1272)\r\n\tat io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:1183)\r\n\t... 77 more\r\nCaused by: java.nio.file.AccessDeniedException: C:\\Users\\JaneRose\\.cache\\selenium\\chromedriver\\win64\\135.0.7049.114\\chromedriver.exe\r\n\tat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\r\n\tat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)\r\n\tat java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)\r\n\tat java.base/sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:105)\r\n\tat java.base/java.nio.file.Files.delete(Files.java:1153)\r\n\tat io.github.bonigarcia.wdm.online.Downloader.deleteFile(Downloader.java:333)\r\n\t... 81 more\r\n","duration":1348129500,"status":"failed"},"match":{"location":"com.example.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":997800,"status":"skipped"},"line":11,"name":"user is on the login page","match":{"location":"com.example.stepdefinitions.LoginSteps.userIsOnLoginPage()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"user enters username \"testuser\" and password \"\"","match":{"arguments":[{"val":"\"testuser\"","offset":21},{"val":"\"\"","offset":45}],"location":"com.example.stepdefinitions.LoginSteps.userEntersUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"user clicks on login button","match":{"location":"com.example.stepdefinitions.LoginSteps.userClicksOnLoginButton()"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"error message should be displayed","match":{"location":"com.example.stepdefinitions.LoginSteps.errorMessageShouldBeDisplayed()"},"keyword":"Then "}]}],"name":"Login Functionality","description":"","id":"login-functionality","keyword":"Feature","uri":"file:src/test/resources/features/login.feature","tags":[]}]